# Basic Workflow
# Name of the workflow
name: First Workflow
# The trigger of the workflow workflow_dispatch means user manually triggers it
# Available events https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on: workflow_dispatch
# Jobs to run
jobs: 
  # Name of the job (totally up to you)
  first-job:
    # The environment who the job will run check other OS at https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
    runs-on: ubuntu-latest
    # Steps to run
    steps: 
      # Name of the step
     - name: First Step
       # Command to execute
       run: echo "Hello World!"
     - name: Print Goodbye
       run: echo "Goodbye - Done"

# You can run multiple commannds using the pipe like in the example below:
# run: |
#    echo "First output"
#    echo "Second output"

# In adition you can instead of run write "uses:" on steps to use GitHub Actions like get the repository code in the marketplace https://github.com/marketplace?category=&query=&type=actions&verification=
# Also a common scenario is to configure the action and for that case we use the "with:" and pass the action configuration if needed
# You can use the "needs: name-job or [job1,job2]" to wait until another job finishes successfully to start the current job

# You can use the github expression to access github context to see the metadata offered by GitHub (you can use env variables)

# name: Output information
# on: workflow_dispatch
# jobs:
#  info:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Output GitHub context
#        run: echo "${{ toJSON(github) }}"
# You can also check this site https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
# for namin convention on filters and files
